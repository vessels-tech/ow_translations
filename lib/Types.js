"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TranslationOrg = exports.TranslationEnum = void 0;
var TranslationEnum;
exports.TranslationEnum = TranslationEnum;

(function (TranslationEnum) {
  TranslationEnum["en_AU"] = "en_AU";
  TranslationEnum["en_US"] = "en_US";
  TranslationEnum["guj_IN"] = "guj_IN";
  TranslationEnum["hi_IN"] = "hi_IN";
  TranslationEnum["nl_NL"] = "nl_NL";
  TranslationEnum["test_UPPER"] = "test_UPPER";
  TranslationEnum["fr_FR"] = "fr_FR";
  TranslationEnum["es_ES"] = "es_ES";
})(TranslationEnum || (exports.TranslationEnum = TranslationEnum = {}));

var TranslationOrg;
/**
 * If you add a new file, it must be defined in this here file.
 */

exports.TranslationOrg = TranslationOrg;

(function (TranslationOrg) {
  TranslationOrg["mywell"] = "mywell";
  TranslationOrg["ggmn"] = "ggmn";
})(TranslationOrg || (exports.TranslationOrg = TranslationOrg = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9UeXBlcy50cyJdLCJuYW1lcyI6WyJUcmFuc2xhdGlvbkVudW0iLCJUcmFuc2xhdGlvbk9yZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBQVlBLGU7OztXQUFBQSxlO0FBQUFBLEVBQUFBLGU7QUFBQUEsRUFBQUEsZTtBQUFBQSxFQUFBQSxlO0FBQUFBLEVBQUFBLGU7QUFBQUEsRUFBQUEsZTtBQUFBQSxFQUFBQSxlO0FBQUFBLEVBQUFBLGU7QUFBQUEsRUFBQUEsZTtHQUFBQSxlLCtCQUFBQSxlOztJQXNCQUMsYztBQUtaOzs7Ozs7V0FMWUEsYztBQUFBQSxFQUFBQSxjO0FBQUFBLEVBQUFBLGM7R0FBQUEsYyw4QkFBQUEsYyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBlbnVtIFRyYW5zbGF0aW9uRW51bSB7XG4gIGVuX0FVID0gJ2VuX0FVJyxcbiAgZW5fVVMgPSAnZW5fVVMnLFxuICBndWpfSU4gPSAnZ3VqX0lOJyxcbiAgaGlfSU4gPSAnaGlfSU4nLFxuICBubF9OTCA9ICdubF9OTCcsXG4gIHRlc3RfVVBQRVIgPSAndGVzdF9VUFBFUicsXG4gIGZyX0ZSID0gJ2ZyX0ZSJyxcbiAgZXNfRVMgPSAnZXNfRVMnLFxufVxuXG5cbmV4cG9ydCB0eXBlIExhbmd1YWdlID0gJ2R1dGNoJyB8ICdlbmdsaXNoJyB8ICdoaW5kaScgfCAnZ3VqYXJhdGknIHwgJ3Rlc3QnIHwgJ3NwYW5pc2gnIHwgJ2ZyZW5jaCc7XG5leHBvcnQgdHlwZSBSZWdpb24gPSAnYXVzdHJhbGlhJyB8ICdpbmRpYScgfCAnbmV0aGVybGFuZHMnIHwgJ3VuaXRlZCBzdGF0ZXMnIHwgJ3VwcGVyY2FzZScgfCAnZnJhbmNlJyB8ICdzcGFpbic7XG5cblxuZXhwb3J0IHR5cGUgVHJhbnNsYXRpb25NZXRhZGF0YSA9IHtcbiAgbGFuZ3VhZ2U6IHN0cmluZyxcbiAgcmVnaW9uOiBzdHJpbmcsXG4gIC8vVE9ETzogYWRkIG1vcmVcbn1cblxuZXhwb3J0IGVudW0gVHJhbnNsYXRpb25Pcmcge1xuICBteXdlbGwgPSAnbXl3ZWxsJyxcbiAgZ2dtbiA9ICdnZ21uJyxcbn1cblxuLyoqXG4gKiBJZiB5b3UgYWRkIGEgbmV3IGZpbGUsIGl0IG11c3QgYmUgZGVmaW5lZCBpbiB0aGlzIGhlcmUgZmlsZS5cbiAqL1xuZXhwb3J0IHR5cGUgVHJhbnNsYXRpb25GaWxlcyA9IEdHTU5UcmFuc2xhdGlvbkZpbGVzIHwgTXlXZWxsVHJhbnNsYXRpb25GaWxlcztcbmV4cG9ydCB0eXBlIE15V2VsbFRyYW5zbGF0aW9uRmlsZXMgPSB7XG4gIHR5cGU6IFRyYW5zbGF0aW9uT3JnLm15d2VsbCxcbiAgJ2VuX0FVJzogVHJhbnNsYXRpb25GaWxlLFxuICAndGVzdF9VUFBFUic6IFRyYW5zbGF0aW9uRmlsZSxcbiAgJ2VuX1VTJzogVHJhbnNsYXRpb25GaWxlLFxuICAnZ3VqX0lOJzogVHJhbnNsYXRpb25GaWxlLFxuICAnaGlfSU4nOiBUcmFuc2xhdGlvbkZpbGUsXG59XG5leHBvcnQgdHlwZSBHR01OVHJhbnNsYXRpb25GaWxlcyA9IHtcbiAgdHlwZTogVHJhbnNsYXRpb25PcmcuZ2dtbixcbiAgJ2VuX0FVJzogVHJhbnNsYXRpb25GaWxlLFxuICAndGVzdF9VUFBFUic6IFRyYW5zbGF0aW9uRmlsZSxcbiAgJ2ZyX0ZSJzogVHJhbnNsYXRpb25GaWxlLFxuICAnZXNfRVMnOiBUcmFuc2xhdGlvbkZpbGUsXG59XG5cbmV4cG9ydCB0eXBlIFRyYW5zbGF0aW9uT3ZlcnJpZGVGaWxlID0gR0dNTlRyYW5zbGF0aW9uT3ZlcnJpZGVGaWxlIHwgTXlXZWxsVHJhbnNsYXRpb25PdmVycmlkZUZpbGU7XG5cbmV4cG9ydCB0eXBlIEdHTU5UcmFuc2xhdGlvbk92ZXJyaWRlRmlsZSA9IHtcbiAgb3JnOiBUcmFuc2xhdGlvbk9yZy5nZ21uLFxuICBvdmVycmlkZXM6IHtcbiAgICAvKiBEZWZpbmUgdGhlIG92ZXJyaWRlbiB2YXJpYWJsZXMgaGVyZSAqL1xuICAgIHNlYXJjaF9oaW50OiBzdHJpbmcsXG4gICAgc2V0dGluZ3Nfc3luY19oZWFkaW5nOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfY29ubmVjdF90b19wZW5kaW5nX3RpdGxlOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfY29ubmVjdF90b19jb25uZWN0ZWRfdGl0bGU6IHN0cmluZyxcbiAgICBzZXR0aW5nc19jb25uZWN0X3RvX3N1YnRpdGxlX2Vycm9yOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfbmV3X3Jlc291cmNlOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX2Rlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfd2FybmluZ19sb2dpbl9yZXF1aXJlZDogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9jb25uZWN0ZWRfdGVzdDogKGZpZWxkTmFtZTogc3RyaW5nLCB1c2VybmFtZTogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgc3luY19sb2dpbl9tZXNzYWdlOiBzdHJpbmcsXG4gICAgc3luY19zdGFydF9zeW5jX2J1dHRvbl9sb2FkaW5nOiBzdHJpbmcsXG4gICAgc3luY19zZWN0aW9uX3Jlc291cmNlczogc3RyaW5nLFxuICAgIC8vIHN5bmNfZW1wdHlfaGVhZGluZzogc3RyaW5nLFxuICAgIHN5bmNfZW1wdHlfY29udGVudDogc3RyaW5nLFxuICAgIC8vIG5ld19yZWFkaW5nX3RpbWVzZXJpZXM6IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfZW1wdHlfaGVhZGluZzogc3RyaW5nLFxuICAgIC8vIHJlc291cmNlX2RldGFpbF9lbXB0eV9oaW50OiBzdHJpbmcsXG4gICAgLy8gbmV3X3Jlc291cmNlX3NhdmVkX2RpYWxvZzogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9zYXZlZF9kaWFsb2dfd2FybmluZzogc3RyaW5nLFxuICAgIHJlc291cmNlX25hbWU6IHN0cmluZyxcbiAgICAvLyBuZXdfcmVzb3VyY2VfYXNzZXRfdHlwZV9sYWJlbDogc3RyaW5nLFxuICAgIC8vIG5ld19yZXNvdXJjZV9zdWJtaXRfYnV0dG9uOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfdmFsdWVfZmllbGQ6ICh1bml0czogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfdmFsdWVfZmllbGRfaW52YWxpZDogc3RyaW5nLFxuICAgIHRpbWVzZXJpZXNfbmFtZV90aXRsZTogKHRzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgc3luY19tYW51YWxfdGV4dDogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzFfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfMl9ib2R5OiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF8zX2JvZHk6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzRfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX2hlbHBfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfNV9ib2R5OiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc2VuZF9lbWFpbF9idXR0b246IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9oZWxwX2VtYWlsOiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5faGVscF9lbmQ6IHN0cmluZyxcbiAgICByZWNlbnRfcmVzb3VyY2Vfbm9uZTogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9uZXc6IHN0cmluZyxcbiAgICByZXNvdXJjZV9lbWFpbF9zdWJqZWN0OiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZW1haWxfbWVzc2FnZTogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9vcmdfc2VsZWN0b3I6IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfZW1wdHlfaGludDogc3RyaW5nLFxuICAgIHJlc291cmNlX2xvYWRpbmdfZXJyb3I6IHN0cmluZyxcbiAgICBlZGl0X3Jlc291cmNlX2RlbGV0ZV9tb2RhbF90ZXh0OiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF80X2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzVfaGVhZGluZzogc3RyaW5nLFxuICAgIGFib3V0X2h0bWw6IHN0cmluZyxcbiAgICBzZXR0aW5nc19hYm91dDogc3RyaW5nLFxuICAgIHBvd2VyZWRfYnlfaHRtbDogc3RyaW5nLFxuICB9XG59XG5cbmV4cG9ydCB0eXBlIE15V2VsbFRyYW5zbGF0aW9uT3ZlcnJpZGVGaWxlID0ge1xuICBvcmc6IFRyYW5zbGF0aW9uT3JnLm15d2VsbCxcbiAgb3ZlcnJpZGVzOiB7XG4gICAgLyogRGVmaW5lIHRoZSBvdmVycmlkZW4gdmFyaWFibGVzIGhlcmUgKi9cbiAgICBzZXR0aW5nc19zeW5jX2hlYWRpbmc6IHN0cmluZyxcbiAgfVxufVxuXG5cbmV4cG9ydCB0eXBlIFRyYW5zbGF0aW9uRmlsZSA9IHtcbiAgbWV0YWRhdGE6IFRyYW5zbGF0aW9uTWV0YWRhdGEsXG4gIHRlbXBsYXRlczoge1xuICAgIGFwcF9yZXNvdXJjZV9sb2FkX2Vycm9yOiBzdHJpbmcsXG4gICAgYXBwX3Jlc291cmNlX25vdF9mb3VuZDogc3RyaW5nLFxuICAgIHNldHRpbmdzX2Nvbm5lY3RfdG9fcGVuZGluZ190aXRsZTogc3RyaW5nLFxuICAgIHNldHRpbmdzX2Nvbm5lY3RfdG9fY29ubmVjdGVkX3RpdGxlOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfY29ubmVjdF90b19zdWJ0aXRsZV9lcnJvcjogc3RyaW5nLFxuICAgIHNldHRpbmdzX2xvZ2luX2Vycm9yOiBzdHJpbmcsXG4gICAgc2V0dGluZ3Nfc3luY19oZWFkaW5nOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfbmV3X3Jlc291cmNlOiBzdHJpbmcsXG4gICAgc2VhcmNoX2hlYWRpbmc6IHN0cmluZyxcbiAgICBzZWFyY2hfZXJyb3I6IHN0cmluZyxcbiAgICBzZWFyY2hfbW9yZTogc3RyaW5nLFxuICAgIHNlYXJjaF9ub19yZXN1bHRzOiBzdHJpbmcsXG4gICAgc2VhcmNoX2hpbnQ6IHN0cmluZyxcbiAgICBzZWFyY2hfcmVjZW50X3NlYXJjaGVzOiBzdHJpbmcsXG4gICAgc2VhcmNoX29mZmxpbmVfbGluZV8xOiBzdHJpbmcsXG4gICAgc2VhcmNoX29mZmxpbmVfbGluZV8yOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfaW52YWxpZF9lcnJvcl9oZWFkaW5nOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfaW52YWxpZF9lcnJvcl9kZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIG5ld19yZWFkaW5nX2ludmFsaWRfZXJyb3Jfb2s6IHN0cmluZyxcbiAgICBuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX2hlYWRpbmc6IHN0cmluZyxcbiAgICBuZXdfcmVhZGluZ191bmtub3duX2Vycm9yX2Rlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfdW5rbm93bl9lcnJvcl9vazogc3RyaW5nLFxuICAgIG5ld19yZWFkaW5nX3NhdmVkX3BvcHVwX3RpdGxlOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfc2F2ZWQ6IHN0cmluZyxcbiAgICBuZXdfcmVhZGluZ193YXJuaW5nX2xvZ2luX3JlcXVpcmVkOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfZGlhbG9nX29uZV9tb3JlOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfZGlhbG9nX2RvbmU6IHN0cmluZyxcbiAgICBuZXdfcmVhZGluZ19kYXRlX2ZpZWxkOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfZGF0ZV9maWVsZF9pbnZhbGlkOiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfdmFsdWVfZmllbGQ6ICh1bml0czogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgbmV3X3JlYWRpbmdfdmFsdWVfZmllbGRfaW52YWxpZDogc3RyaW5nLFxuICAgIG5ld19yZWFkaW5nX3RpbWVzZXJpZXM6IHN0cmluZyxcbiAgICBuZXdfcmVhZGluZ19zYXZlX2J1dHRvbjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV91c2VybmFtZV9maWVsZDogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV91c2VybmFtZV9pbnZhbGlkOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX3Bhc3N3b3JkX2ZpZWxkOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX3Bhc3N3b3JkX2ludmFsaWQ6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfbW9iaWxlX2ZpZWxkOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX21vYmlsZV9pbnZhbGlkOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX3ZlcmlmeV9maWVsZDogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV92ZXJpZnlfaW52YWxpZDogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9sb2dvdXRfYnV0dG9uOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zZXJ2aWNlX2Nvbm5lY3RlZF90ZXN0OiAoZmllbGROYW1lOiBzdHJpbmcsIHVzZXJuYW1lOiBzdHJpbmcpID0+IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX3NlcnZpY2Vfc3VibWl0X2J1dHRvbjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9kZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9lcnJvcjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fc2VydmljZV9vcmdfc2VsZWN0b3I6IHN0cmluZyxcbiAgICBmYXZvdXJpdGVfcmVzb3VyY2VfaGVhZGluZzogc3RyaW5nLFxuICAgIGZhdm91cml0ZV9yZXNvdXJjZV9oaW50XzE6IHN0cmluZyxcbiAgICBmYXZvdXJpdGVfcmVzb3VyY2VfaGludF8yOiBzdHJpbmcsXG4gICAgcmVjZW50X3Jlc291cmNlX2hlYWRpbmc6IHN0cmluZyxcbiAgICByZWNlbnRfcmVzb3VyY2Vfbm9uZTogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9sYXRlc3Q6IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfbmV3OiBzdHJpbmcsXG4gICAgc3luY19sb2dpbl9tZXNzYWdlOiBzdHJpbmcsXG4gICAgc3luY19zdGFydF9zeW5jX2J1dHRvbjogc3RyaW5nLFxuICAgIHN5bmNfc3RhcnRfc3luY19idXR0b25fbG9hZGluZzogc3RyaW5nLFxuICAgIHN5bmNfc2VjdGlvbl9yZXNvdXJjZXM6IHN0cmluZyxcbiAgICBzeW5jX3NlY3Rpb25fcmVhZGluZ3M6IHN0cmluZyxcbiAgICBzeW5jX2VtcHR5X2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX2VtcHR5X2NvbnRlbnQ6IHN0cmluZyxcbiAgICBzZWxlY3RfbGFuZ3VhZ2VfaGVhZGluZzogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9zdW1tYXJ5X3RhYjogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9lbXB0eV9oZWFkaW5nOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZGV0YWlsX2VtcHR5X2hpbnQ6IHN0cmluZyxcbiAgICBuZXdfcmVzb3VyY2Vfc2F2ZWRfZGlhbG9nOiBzdHJpbmcsXG4gICAgbmV3X3Jlc291cmNlX3NhdmVkX2RpYWxvZ193YXJuaW5nOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfbmFtZTogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9sYXQ6IHN0cmluZyxcbiAgICBuZXdfcmVzb3VyY2VfbG5nOiBzdHJpbmcsXG4gICAgbmV3X3Jlc291cmNlX2Fzc2V0X3R5cGVfbGFiZWw6IHN0cmluZyxcbiAgICBuZXdfcmVzb3VyY2Vfb3duZXJfbmFtZV9sYWJlbDogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9sb2NhdGlvbl9uYW1lX2xhYmVsOiBzdHJpbmcsXG4gICAgbmV3X3Jlc291cmNlX3N1Ym1pdF9idXR0b246IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfbmFtZV9sYWJlbDogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9pZDogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9pZF9jaGVja19lcnJvcjogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV9pZF9jaGVja190YWtlbjogc3RyaW5nLFxuICAgIHFyX2NvZGVfbm90X2ZvdW5kOiBzdHJpbmcsXG4gICAgY2FsZW5kYXJfaW5wdXRfY29uZmlybTogc3RyaW5nLFxuICAgIGNhbGVuZGFyX2lucHV0X2NhbmNlbDogc3RyaW5nLFxuICAgIHRpbWVzZXJpZXNfbmFtZV90aXRsZTogKHRzTmFtZTogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZGV0YWlsX2hlYWRpbmdfbGFiZWw6IHN0cmluZyxcbiAgICB0aW1lc2VyaWVzX2RhdGVfZm9ybWF0OiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZGV0YWlsX25ld19yZWFkaW5nX2J1dHRvbjogc3RyaW5nLFxuICAgIHN5bmNfbWFudWFsX3RleHQ6IHN0cmluZywgXG4gICAgc3luY19tYW51YWxfc2hvd19tZV9ob3c6IHN0cmluZywgXG4gICAgc3luY19kYXRlX2Zvcm1hdDogc3RyaW5nLFxuICAgIHN5bmNfZXJyb3Jfc3RhdGlvbl9ub3RfY3JlYXRlZDogc3RyaW5nLFxuICAgIHN5bmNfZXJyb3JfZ2V0X3RpbWVzZXJpZXNfaWRfdHJhbnNwb3J0OiBzdHJpbmcsXG4gICAgc3luY19lcnJvcl9nZXRfdGltZXNlcmllc19pZF9ub25lOiBzdHJpbmcsXG4gICAgc3luY19lcnJvcl9nZXRfdGltZXNlcmllc19pZF90b29fbWFueTogc3RyaW5nLFxuICAgIHN5bmNfZXJyb3JfZ2V0X3RpbWVzZXJpZXNfaWRfbm9fdGltZXNlcmllczogc3RyaW5nLFxuICAgIHN5bmNfZXJyb3Jfc2F2ZV9yZWFkaW5nX25vdF9sb2dnZWRfaW46IHN0cmluZyxcbiAgICBzeW5jX2Vycm9yX2dlbmVyaWNfdHJhbnNwb3J0OiBzdHJpbmcsXG4gICAgc3luY19lcnJvcl9zYXZlX3JlYWRpbmdfdW5rbm93bjogc3RyaW5nLFxuICAgIHN5bmNfZXJyb3JfZGVsZXRlX3BlbmRpbmdfcmVhZGluZzogc3RyaW5nLFxuICAgIHN5bmNfZW1haWxfZXJyb3I6IHN0cmluZyxcbiAgICBzeW5jX2VtYWlsX3N1Y2Nlc3M6IHN0cmluZyxcbiAgICBzeW5jX2Vycm9yX3Vua25vd246IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9oZWFkaW5nOiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF8xX2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzFfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfMl9oZWFkaW5nOiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF8yX2JvZHk6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzNfaGVhZGluZzogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX3N0ZXBfM19ib2R5OiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF80X2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzRfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX2hlbHBfaGVhZGluZzogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX2hlbHBfYm9keTogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX3NlbmRfZW1haWxfYnV0dG9uOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfbGFuZ3VhZ2U6IHN0cmluZywgXG4gICAgdGltZXNlcmllc19ub25lOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZGV0YWlsX25ld19yZWFkaW5nOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19lcnJvcl9tZXNzYWdlOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19pbnZhbGlkX3Bob25lX251bWJlcjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fbG9naW5fY29kZTogKG1vYmlsZTogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19yZXNlbmQ6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX3NpZ25lZF9pbl9oZWFkaW5nOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19lZGl0OiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19uYW1lX2xhYmVsOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19uaWNrbmFtZV9sYWJlbDogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fZW1haWxfbGFiZWw6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX3Byb2ZpbGVfbW9iaWxlOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19zaWduX291dDogc3RyaW5nLFxuICAgIG1lbnVfd2VsbDogc3RyaW5nLFxuICAgIG1lbnVfcmFpbmZhbGw6IHN0cmluZyxcbiAgICBtZW51X3dhdGVyX3F1YWxpdHk6IHN0cmluZyxcbiAgICBtZW51X2NoZWNrZGFtOiBzdHJpbmcsXG4gICAgc2Nhbl9oaW50OiBzdHJpbmcsXG4gICAgc3luY19zY3JlZW5fc3RlcF81X2hlYWRpbmc6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9zdGVwXzVfYm9keTogc3RyaW5nLFxuICAgIHRpbWVzZXJpZXNfY2FyZF9ub3RfZW5vdWdoOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfZGV0YWlsX2VkaXRfcmVzb3VyY2U6IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfZWRpdF9yZWFkaW5nczogc3RyaW5nLFxuICAgIGdlbmVyYWxfaXNfcmVxdWlyZWRfZXJyb3I6IHN0cmluZyxcbiAgICBuZXdfcmVzb3VyY2VfbmFtZTogc3RyaW5nLFxuICAgIGVkaXRfcmVzb3VyY2VfZGVsZXRlX2J1dHRvbjogc3RyaW5nLFxuICAgIHN5bmNfc2NyZWVuX2hlbHBfZW1haWw6IHN0cmluZyxcbiAgICBzeW5jX3NjcmVlbl9oZWxwX2VuZDogc3RyaW5nLFxuICAgIHJlc291cmNlX2VtYWlsX3N1YmplY3Q6IHN0cmluZyxcbiAgICByZXNvdXJjZV9lbWFpbF9tZXNzYWdlOiBzdHJpbmcsXG4gICAgcmVzb3VyY2VfbG9hZGluZ19lcnJvcjogc3RyaW5nLFxuICAgIHRpbWVzZXJpZXNfbG9hZGluZ19lcnJvcjogc3RyaW5nLFxuICAgIGNvbm5lY3RfdG9fbG9naW5fZXJyb3I6IHN0cmluZyxcbiAgICBlZGl0X3Jlc291cmNlX2RlbGV0ZV9tb2RhbF90aXRsZTogc3RyaW5nLFxuICAgIGVkaXRfcmVzb3VyY2VfZGVsZXRlX21vZGFsX3RleHQ6IHN0cmluZyxcbiAgICBlZGl0X3Jlc291cmNlX2RlbGV0ZV9tb2RhbF9vazogc3RyaW5nLFxuICAgIGVkaXRfcmVzb3VyY2VfZGVsZXRlX21vZGFsX2NhbmNlbDogc3RyaW5nLFxuICAgIHNldHRpbmdzX3BlbmRpbmdfaGVhZGluZzogc3RyaW5nLFxuICAgIG5ld19yZXNvdXJjZV93YXRlcl9jb2x1bW5faGVpZ2h0OiBzdHJpbmcsXG4gICAgcGVuZGluZ19zdGF0dXNfcmVqZWN0ZWQ6IHN0cmluZyxcbiAgICBwZW5kaW5nX3N0YXR1c191bmFwcHJvdmVkOiBzdHJpbmcsXG4gICAgcGVuZGluZ19zdGF0dXNfYXBwcm92ZWQ6IHN0cmluZyxcbiAgICBhYm91dF9odG1sOiBzdHJpbmcsXG4gICAgc2V0dGluZ3NfYWJvdXQ6IHN0cmluZyxcbiAgICBwb3dlcmVkX2J5X2h0bWw6IHN0cmluZyxcbiAgICBsb25nX2RhdGVfZm9ybWF0OiBzdHJpbmcsXG4gICAgZGVmYXVsdF9kYXRldGltZV9mb3JtYXQ6IHN0cmluZyxcbiAgICBwZW5kaW5nX3Jlc291cmNlX2hlYWRpbmc6IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfb3duZXJfc2VjdGlvbjogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9vd25lcl9uYW1lOiBzdHJpbmcsXG4gICAgb3Blbl91cmxfZXJyb3I6IHN0cmluZyxcbiAgICBlZGl0X3JlYWRpbmdzX25vX3JlYWRpbmdzOiBzdHJpbmcsXG4gICAgZWRpdF9yZWFkaW5nc19uZXdfcmVhZGluZzogc3RyaW5nLFxuICAgIHNldHRpbmdzX21hcDogc3RyaW5nLFxuICAgIG1lbnVfYnJvd3NlX3RleHQ6IHN0cmluZyxcbiAgICBtZW51X3NjYW5fdGV4dDogc3RyaW5nLFxuICAgIG1lbnVfc2VhcmNoX3RleHQ6IHN0cmluZyxcbiAgICBtZW51X25ld190ZXh0OiBzdHJpbmcsXG4gICAgY291bnRyeV9sYWJlbDogc3RyaW5nLFxuICAgIHBpbmNvZGVfaW52YWxpZF9tZXNzYWdlOiBzdHJpbmcsXG4gICAgY29ubmVjdF90b19lZGl0X2hlYWRpbmc6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX2ludmFsaWRfbWVzc2FnZTogc3RyaW5nLFxuICAgIHVuYXBwcm92ZWQ6IHN0cmluZyxcbiAgICBhcHByb3ZlZDogc3RyaW5nLFxuICAgIHJlamVjdGVkOiBzdHJpbmcsXG4gICAgdW5hcHByb3ZlZF9kZXNjcmlwdGlvbjogc3RyaW5nLFxuICAgIGFwcHJvdmVkX2Rlc2NyaXB0aW9uOiBzdHJpbmcsXG4gICAgcmVqZWN0ZWRfZGVzY3JpcHRpb246IHN0cmluZyxcbiAgICByZXNvdXJjZV9kZXRhaWxfc3luY19yZXF1aXJlZDogc3RyaW5nLFxuICAgIGZvcm1hdFN1YnRpdGxla2V5OiAoa2V5OiBzdHJpbmcpID0+IHN0cmluZyxcbiAgICBhYm91dF9odG1sX3VybDogc3RyaW5nLFxuICAgIHJlYWRpbmdfaW1hZ2VfdXJsX2J1aWxkZXI6IChpZDogc3RyaW5nKSA9PiBzdHJpbmcsXG4gICAgc2VsZWN0X2xhbmd1YWdlX3BvcHVwOiAobGFuZ3VhZ2U6IHN0cmluZykgPT4gc3RyaW5nLFxuICAgIG5ld19sYWJlbDogc3RyaW5nLFxuICAgIHJhaW5mYWxsX3RvdGFsX2hlYWRpbmc6IHN0cmluZyxcbiAgICByYWluZmFsbF90b3RhbF9zdWJ0aXRsZTogc3RyaW5nLFxuICAgIHJhaW5mYWxsX3RvdGFsX2NvbnRlbnRfc3VidGl0bGU6IHN0cmluZyxcbiAgICBsZWdlbmRfdGV4dF95ZWFyX29uZTogc3RyaW5nLFxuICAgIGxlZ2VuZF90ZXh0X3llYXJfdHdvOiBzdHJpbmcsXG4gICAgbGVnZW5kX3RleHRfeWVhcl90aHJlZTogc3RyaW5nLFxuICAgIGxvYWRfbG9jYXRpb25fZXJyb3JfbWVzc2FnZTogc3RyaW5nLFxuICAgIHJlc291cmNlX2RldGFpbF9wbGFjZWhvbGRlcl91cmw6IHN0cmluZyxcbiAgICBzeW5jX2Vycm9yX21lc3NhZ2U6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX211c3RfYWNjZXB0X2NvbmRpdGlvbnM6IHN0cmluZyxcbiAgICBjb25uZWN0X3RvX3NlcnZpY2VfY29uZGl0aW9uczogc3RyaW5nLFxuICAgIHRha2VfcGljdHVyZV9lcnJvcl9tZXNzYWdlOiBzdHJpbmcsXG4gICAgYWRkX2ltYWdlX3RleHQ6IHN0cmluZyxcblxuICB9XG59Il19